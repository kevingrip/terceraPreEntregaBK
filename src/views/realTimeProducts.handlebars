<div style="margin: 20px;">
    <div class="d-flex space-evenly" style="height: 150px;">
        <div style="width: 50%">
        <h5>Bienvenido: {{user.firstName}}, {{user.lastName}}</h5>
        <p>Se ha logueado correctamente con el rol: {{user.role}}</p>
        </div>

        <div style="width: 50%" class="d-flex justify-content-end">
            <form action="/api/sessions/logout" method="get">
                <button type="submit" class="btn btn-primary">Cerrar sesion</button>
            </form>
        </div>
    </div>
    <div class="d-flex justify-content-center">
        <h1>Listado de Productos RealTime</h1>
    </div>
    <div class="d-flex justify-content-center">
        <ul id="productsList" class="list-group" method="delete" enctype="multipart/form-data">
            {{#each productsData.docs}}
            <li style="margin-bottom: 40px;">
                <img src="{{thumbnail}}" style="width: 10rem; height:100px;" alt="">
                <h4>{{title}}</h4>
                <p>{{description}}</p>
                <p>$ {{price}}</p>
                <button id="addProductCart" type="button" class="btn btn-success" style="width: 10rem; height: 2rem;" onclick="addToCart('{{_id}}','667cc7264c9271492cab686a')">Agregar al carrito</button>            
                <button type="button" class="btn btn-danger" style="width: 10rem; height: 2rem;" onclick="handleDeleteButtonClick('{{_id}}')">Eliminar de la base</button>
            </li>
            {{/each}}
        </ul>
    </div>

    <div class="pagination" >
        {{#if productsData.hasPrevPage}}
            <a href={{productsData.prevLink}}>Anterior__</a>
        {{/if}}

        <p>{{productsData.page}} de {{productsData.totalPages}}</p>

        {{#if productsData.hasNextPage}}
            <a href={{productsData.nextLink}}>__Siguiente</a>
        {{/if}}
    </div>
    
</div>

<div class="mt-3">
    <h3>Agregar producto</h3>

    <form id="newProduct" method="post" enctype="multipart/form-data">
        <input class="form-control" type="text" id="title" name="title" placeholder="Titulo" style="width: 300px;"><br />
        <input class="form-control" type="text" id="description" name="description" placeholder="description" style="width: 300px;"><br />
        <input class="form-control" type="text" id="category" name="category" placeholder="category" style="width: 300px;"><br />
        <input class="form-control" type="number" id="price" name="price" placeholder="price" style="width: 300px;"><br />
        <input class="form-control" type="file" id="originalname" name="thumbnail" placeholder="thumbnail" style="width: 300px;"><br />
        <input class="form-control" type="text" id="code" name="code" placeholder="code" style="width: 300px;"><br />
        <input class="form-control" type="number" id="stock" name="stock" placeholder="stock" style="width: 300px;"><br />
        <select  class="form-control" id="status" name="status" style="width: 300px;">
            <option value="true">true</option>
            <option value="false">false</option>
        <select  />


        <button type="submit" class="btn btn-success" style="margin: 10px;">Cargar</button>
    </form>
</div>





<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
<script>

    const serverAddress = 'ws://localhost:8080';
    const socketClient = io(serverAddress)

    document.getElementById("newProduct").addEventListener("submit", async function(event) {
        event.preventDefault();

        const formData = new FormData(this);
        const response = await fetch("/api/product", {
            method: "POST",
            body: formData
        });

        if (response.ok) {
            socketClient.emit("newProduct", "Producto agregado");
        } else {
            console.error("Error al enviar el formulario");
        }
    });

    

    const handleDeleteButtonClick = async (productId) => {
        console.log('Se hizo clic en el botÃ³n "delete" del producto con ID:', productId);
        console.log(`/api/product/${productId}`)
        const response = await fetch(`/api/product/${productId}`, {
            method: "DELETE"
        });

        if (response.ok) {
            socketClient.emit("productsList", "Producto Borrado");
        } else {
            console.error("Error al enviar el formulario");
        }
    }

    const addToCart = async (product,cart) =>{
        const res = await fetch(`/api/cart/${cart}/product/${product}`, {
            method: "POST"
        });

        if (res.ok) {
            console.log("Producto agregado al carrito");
        } else {
            console.error("Error al enviar el formulario");
        }
    }


    socketClient.on('newProduct', data =>{
        window.location.reload();
        console.log(data);
    });

    socketClient.on('deleteProduct', data =>{
        window.location.reload();
        console.log(data);
    });


</script>
